Q1. Query all columns for all American cities in the CITY table with populations larger than 100000.
    The CountryCode for America is USA.
    
    select * from city where COUNTRYCODE = 'USA' and POPULATION > 100000;
    
 Q2. Query the NAME field for all American cities in the CITY table with populations larger than 120000.
     The CountryCode for America is USA.
    
      select * from city where COUNTRYCODE = 'USA' and POPULATION > 120000;
      
 
 
 select ID from city;
select NAME from city;
select COUNTRYCODE from city;
select DISTRICT from city;
select POPULATION from city;



SELECT * FROM city where ID = 1661;


select * from city where COUNTRYCODE = 'JPN';


Q7. Query a list of CITY and STATE from the STATION table.

SELECT City,State FROM STATION;


SELECT distinct(City) FROM STATION WHERE ID%2 = 0 ;


select count(City) - count(distinct(City)) from STATION; 
ans: 13

(select City, length(City) as len from station order by len, City limit 1 )
union
(select City, length(City) as len from station order by len desc, City desc limit 1);

11.

select 
distinct(city) from station 
where city regexp '^[AEIOU]';

12.
select 
distinct(city) from station 
where city regexp '[AEIOU]$';

13.
select 
distinct(city) from station 
where city NOT regexp '^[AEIOU]';

14.
select 
distinct(city) from station 
where city NOT regexp '[AEIOU]$';

15.
select 
distinct(city) from station 
where (city NOT regexp '[AEIOU]$') or (city NOT regexp '^[AEIOU]') ;

16.
select 
distinct(city) from station 
where (city NOT regexp '[AEIOU]$') and (city NOT regexp '^[AEIOU]') ;


17.
SELECT p.product_id, p.product_name
FROM Product p
WHERE p.product_id NOT IN
(SELECT s.product_id
FROM Sales s
WHERE s.sale_date NOT BETWEEN '2019-01-01' AND '2019-03-31') ;

18.
select distinct(author_id) as id
from views
where author_id = viewer_id
order by id;

19.

select 
round(avg(case when order_date = customer_pref_delivery_date then 1 
	      else 0 
          end)*100,2) from delivery;


20.

select ad_id,
round((sum(case when action = 'Clicked' then 1 else 0 end))/
          (sum(case when action = 'Ignored' then 0 else 1 end))*100,2) as ctr
from ads
group by ad_id
order by ctr desc, ad_id;


21.

select team_id,
count(*) over (partition by team_id ) teeam_size 
from employee
order by employee_id;

22.
select c.country_name,
(case when avg(weather_state)<= 15 then 'Cold'
		when avg(weather_state)>= 25 then 'Hot'
        else 'Warm' end )as weather_type 
from weather w 
inner join countries c on w.country_id = c.country_id
where month(day) = 11
group by c.country_name;


23.  

select 
p.product_id,
round(sum(u.units*p.price)/ sum(u.units),2) as average_price
from prices p
inner join units u on p.product_id = u.product_id and
u.purchase_date between p.start_date and p.end_date
group by p.product_id;


24.
select * from activity;
select 
tmp.player_id,
tmp.event_date as first_loin
from
(select *,
rank() over (partition by player_id order by event_date) as login_rank
from activity) as tmp 
 where tmp.login_rank = 1;
 
 25.
 
 select 
tmp.player_id,
tmp.device_id
from
(select *,
rank() over (partition by player_id order by event_date) as login_rank
from activity) as tmp 
 where tmp.login_rank = 1;
 
 26.
 
 select 
tmp.* from
(select
p.product_name,
sum(o.unit) as unit 
from products p 
inner join orders o on p.product_id = o.product_id 
where month(o.order_date) = 02 
group by p.product_name) as tmp
where unit >=100

27.

select * from users
where  mail regexp '^[a-zA-Z][a-zA-Z0-9\_\.\-]*@leetcode.com';

29.
select tmp.title from
(select c.*,
t.program_date,
case when c.kids_content = 'Y' and c.content_type = 'Movies' then 1 else 0 end as res
from content c 
left join tvprogram t on c.content_id = t.content_id) tmp
where month(tmp.program_date)=06 and res = 1;

30.
select q.id,q.year,
coalesce(n.npv,0)
from queries q 
left join npv n on (q.id, q.year) = (n.id, n.year);

32.
select
u.unique_id,
e.name
from employee2 e
left join employeUni u on u.id = e.id;

33.
select * from
(select 
distinct(u.name),
coalesce(sum(r.distance) over (partition by r.user_id order by u.name), 0) as travelled_distance 
from users2 u 
left join rides r on u.id = r.user_id) tmp
order by tmp.travelled_distance desc, tmp.name asc 
34.

35.
with cte as (select user_id, count(rating) as count from movierating group by user_id)
select u.name from cte 
inner join users3 u on cte.user_id = u.user_id 
order by cte.count desc limit 1; 

with cte as (select movie_id, avg(rating) as avg_rat from movierating
where month(created_at) = '02' group by movie_id)
select m.title from cte 
inner join movies m on cte.movie_id = m.movie_id
order by avg_rat desc limit 1


36.
with cte as (select user_id, sum(distance) as distance  from rides2 group by user_id )
select u.name,coalesce(cte.distance,0) as travelled_distance from cte
right join users4 u on cte.user_id = u.id
order by cte.distance desc, u.name 

37.repeated
38.
select distinct(tmp.id), tmp.name from
(select s.*,d.name as d_name from students s
left join departments2 d on s.department_id = d.id) tmp 
where tmp.d_name is null

OR 
select distinct(id) , name from students 
where department_id not in (select id from departments2)

39.
select LEAST(from_id,to_id) as person1,
GREATEST(from_id,to_id) as person2,
COUNT(*) as call_count,
SUM(duration) as total_duration
from Calls
group by person1,person2;

40.
23 query
41.
with cte as(select w.name, p.width*p.length*p.height as volume, w.units as units
from warehouse w 
join products1 p on w.product_id = p.product_id) 
select name, sum(volume*units) as volume from cte
group by name

42.
select sale_date,
sum(case
               when fruit = 'APPLES' then sold_num
               when fruit = 'Oranges' then -sold_num
end) as difference
from sales2
group by sale_date

43.
with cte as (select player_id , 
			lead(event_date,1) over(partition by player_id) - event_date as diff from activity),
     cte2 as (select count(*) as count1 from cte where diff = 1 )
select 
round(count1 / (select count(distinct player_id) from activity),2) as fraction  from cte2


44.


